{"version":3,"sources":["components/Button/Button.js","components/ImageContainer/ImageContainer.js","containers/Image/utylity.js","containers/Image/Image.js","components/ImagesGenerator/ImagesGenerator.js","components/Counter/Counter.js","containers/Uploader/Uploader.js","App.js","serviceWorker.js","index.js","components/ImageContainer/ImageContainer.module.scss","containers/Image/Image.module.scss","components/Button/Button.module.scss","containers/Uploader/Uploader.module.scss","components/Counter/Counter.module.scss"],"names":["Button","props","react_default","a","createElement","disabled","buttonIsDisabled","onClick","clicked","className","classes","buttonColor","join","buttonText","imageContainer","ImageContainer","containerColor","ImageContainer__green","ImageContainer__blue","ImageContainer__red","children","updateObj","isClickedGreen","isClickedBlue","isClickedRed","Image","state","buttonClickHandler","_this","setState","prevState","color","firebase","database","ref","concat","userName","caption","update","key","this","picturesDataObj","console","log","_this2","Fragment","src","alt","Image__title","Image__selectionButtons","components_Button_Button","Component","imagesGenerator","images","titles","imagesArr","reduce","sum","current","img","filter","image","RegExp","test","Object","defineProperty","map","element","containers_Image_Image","keys","values","counter","selectedElementsAmount","elementColor","amountOfElement","everyPicture","Counter","Uploader","picturesPaths","picturesTitles","selectedfiles","inputValue","selectImageHandler","e","target","files","uploadHandler","metadata","contentType","storageRef","storage","toConsumableArray","forEach","file","i","uploadTask","child","name","put","on","TaskEvent","STATE_CHANGED","snapshot","progress","bytesTransferred","totalBytes","Math","round","error","code","pictureTitle","replace","getDownloadURL","then","downloadURL","set","path","exists","val","prop","picturePath","push","type","multiple","onChange","Uploader__imagesContainer","ImagesGenerator","App","containers_Uploader_Uploader","Boolean","window","location","hostname","match","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","Button__green","Button__blue","Button__red"],"mappings":"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","file":"static/js/main.bb06c1f9.chunk.js","sourcesContent":["import React from 'react';\nimport classes from './Button.module.scss';\n\nconst Button = (props) => {\n\treturn (\n\t\t<button\n\t\t\tdisabled={props.buttonIsDisabled}\n\t\t\tonClick={props.clicked}\n\t\t\tclassName={[ classes.Button, classes[props.buttonColor] ].join(' ')}\n\t\t>\n\t\t\t{props.buttonText}\n\t\t</button>\n\t);\n};\n\nexport default Button;\n","import React from 'react';\nimport classes from './ImageContainer.module.scss';\n\nconst imageContainer = (props) => {\n\treturn (\n\t\t<div\n\t\t\tclassName={[\n\t\t\t\tclasses.ImageContainer,\n\t\t\t\tprops.containerColor === 'green' ? classes.ImageContainer__green : null,\n\t\t\t\tprops.containerColor === 'blue' ? classes.ImageContainer__blue : null,\n\t\t\t\tprops.containerColor === 'red' ? classes.ImageContainer__red : null\n\t\t\t].join(' ')}\n\t\t>\n\t\t\t{props.children}\n\t\t</div>\n\t);\n};\n\nexport default imageContainer;\n","export const updateObj = (containerColor, isClickedGreen, isClickedBlue, isClickedRed) => {\n\treturn {\n\t\tcontainerColor: containerColor,\n\t\tisClickedGreen: isClickedGreen,\n\t\tisClickedBlue: isClickedBlue,\n\t\tisClickedRed: isClickedRed\n\t};\n};\n","import React, { Component } from 'react';\nimport classes from './Image.module.scss';\nimport Button from '../../components/Button/Button';\nimport ImageContainer from '../../components/ImageContainer/ImageContainer';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\nimport { updateObj } from './utylity';\n\nclass Image extends Component {\n\tstate = {\n\t\tcontainerColor: '',\n\t\tisClickedGreen: false,\n\t\tisClickedBlue: false,\n\t\tisClickedRed: false\n\t};\n\n\tbuttonClickHandler = (buttonColor) => {\n\t\tswitch (buttonColor) {\n\t\t\tcase 'green':\n\t\t\t\tthis.setState((prevState) => {\n\t\t\t\t\tlet color = 'green';\n\t\t\t\t\tif (prevState.isClickedGreen === true) color = '';\n\t\t\t\t\tfirebase\n\t\t\t\t\t\t.database()\n\t\t\t\t\t\t.ref(`${this.props.userName}/${this.props.caption[0]}`)\n\t\t\t\t\t\t.update(updateObj(color, !prevState.isClickedGreen, false, false));\n\n\t\t\t\t\treturn updateObj(color, !prevState.isClickedGreen, false, false);\n\t\t\t\t});\n\n\t\t\t\tbreak;\n\t\t\tcase 'blue':\n\t\t\t\tthis.setState((prevState) => {\n\t\t\t\t\tlet color = 'blue';\n\t\t\t\t\tif (prevState.isClickedBlue === true) color = '';\n\t\t\t\t\tfirebase\n\t\t\t\t\t\t.database()\n\t\t\t\t\t\t.ref(`${this.props.userName}/${this.props.caption[0]}`)\n\t\t\t\t\t\t.update(updateObj(color, false, !prevState.isClickedBlue, false));\n\t\t\t\t\treturn updateObj(color, false, !prevState.isClickedBlue, false);\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 'red':\n\t\t\t\tthis.setState((prevState) => {\n\t\t\t\t\tlet color = 'red';\n\t\t\t\t\tif (prevState.isClickedRed === true) color = '';\n\t\t\t\t\tfirebase\n\t\t\t\t\t\t.database()\n\t\t\t\t\t\t.ref(`${this.props.userName}/${this.props.caption[0]}`)\n\t\t\t\t\t\t.update(updateObj(color, false, false, !prevState.isClickedRed));\n\t\t\t\t\treturn updateObj(color, false, false, !prevState.isClickedRed);\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\tcomponentDidMount() {\n\t\t// Recognize state of the element based on Firebase data\n\t\tfor (let key in this.props.picturesDataObj) {\n\t\t\tif (key === this.props.caption[0]) {\n\t\t\t\tlet color = '';\n\t\t\t\tif (this.props.picturesDataObj[key].isClickedGreen) color = 'green';\n\t\t\t\tif (this.props.picturesDataObj[key].isClickedBlue) color = 'blue';\n\t\t\t\tif (this.props.picturesDataObj[key].isClickedRed) color = 'red';\n\t\t\t\tthis.setState(\n\t\t\t\t\tupdateObj(\n\t\t\t\t\t\tcolor,\n\t\t\t\t\t\tthis.props.picturesDataObj[key].isClickedGreen,\n\t\t\t\t\t\tthis.props.picturesDataObj[key].isClickedBlue,\n\t\t\t\t\t\tthis.props.picturesDataObj[key].isClickedRed\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\t// Firebase listener for state change of the element based on the database state\n\n\t\t// \tconst userNameDbElement = firebase.database().ref('Marcin/' + this.props.caption[0]);\n\t\t// \tuserNameDbElement.on('value', (snapshot) => {\n\t\t// \t\tif (this.state.isClickedBlue !== snapshot.val().isClickedBlue)\n\t\t// \t\t\tthis.setState({ isClickedBlue: snapshot.val().isClickedBlue });\n\t\t// \t});\n\t}\n\n\tcomponentDidUpdate() {\n\t\tconsole.log('update');\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<ImageContainer containerColor={this.state.containerColor}>\n\t\t\t\t\t<figure>\n\t\t\t\t\t\t<img className={classes.Image} src={this.props.src} alt={this.props.caption[0]} />\n\t\t\t\t\t\t<figcaption className={classes.Image__title}>{this.props.caption[0]}</figcaption>\n\t\t\t\t\t</figure>\n\t\t\t\t\t<div className={classes.Image__selectionButtons}>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tclicked={() => this.buttonClickHandler('green')}\n\t\t\t\t\t\t\tbuttonText=\"Tak\"\n\t\t\t\t\t\t\tbuttonColor=\"Button__green\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tclicked={() => this.buttonClickHandler('blue')}\n\t\t\t\t\t\t\tbuttonText=\"Może\"\n\t\t\t\t\t\t\tbuttonColor=\"Button__blue\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tclicked={() => this.buttonClickHandler('red')}\n\t\t\t\t\t\t\tbuttonText=\"Nie\"\n\t\t\t\t\t\t\tbuttonColor=\"Button__red\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</ImageContainer>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default Image;\n","import React from 'react';\nimport Image from '../../containers/Image/Image';\n\nconst imagesGenerator = (props) => {\n\tconst images = props.images;\n\tconst titles = props.titles;\n\tconst picturesDataObj = props.picturesDataObj;\n\n\t// Link picture title with exact picture file\n\tconst imageTitleObj = titles.reduce((sum, current) => {\n\t\tconst img = images.filter((image) => {\n\t\t\tlet patt = new RegExp(current, 'g');\n\t\t\treturn patt.test(image);\n\t\t});\n\t\treturn sum.concat({ [current]: img[0] });\n\t}, []);\n\n\tconst imagesArr = imageTitleObj.map((element) => {\n\t\treturn (\n\t\t\t<Image\n\t\t\t\tkey={Object.keys(element)}\n\t\t\t\tsrc={Object.values(element)}\n\t\t\t\tcaption={Object.keys(element)}\n\t\t\t\tpicturesDataObj={picturesDataObj}\n\t\t\t\tuserName={props.userName}\n\t\t\t/>\n\t\t);\n\t});\n\n\treturn <React.Fragment>{imagesArr}</React.Fragment>;\n};\n\nexport default imagesGenerator;\n","import React from 'react';\nimport classes from './Counter.module.scss';\n\nconst counter = (props) => {\n\tconst selectedElementsAmount = (elementColor) => {\n\t\tlet amountOfElement = 0;\n\t\tswitch (elementColor) {\n\t\t\tcase 'green':\n\t\t\t\tfor (let isClickedGreen in props.picturesDataObj) {\n\t\t\t\t\tif (props.picturesDataObj[isClickedGreen].isClickedGreen === true) amountOfElement++;\n\t\t\t\t}\n\t\t\t\treturn amountOfElement;\n\t\t\tcase 'blue':\n\t\t\t\tfor (let isClickedBlue in props.picturesDataObj) {\n\t\t\t\t\tif (props.picturesDataObj[isClickedBlue].isClickedBlue === true) amountOfElement++;\n\t\t\t\t}\n\t\t\t\treturn amountOfElement;\n\n\t\t\tcase 'red':\n\t\t\t\tfor (let isClickedRed in props.picturesDataObj) {\n\t\t\t\t\tif (props.picturesDataObj[isClickedRed].isClickedRed === true) amountOfElement++;\n\t\t\t\t}\n\t\t\t\treturn amountOfElement;\n\n\t\t\tcase 'wszystkie':\n\t\t\t\tfor (let everyPicture in props.picturesDataObj) {\n\t\t\t\t\tif (everyPicture) amountOfElement++;\n\t\t\t\t}\n\t\t\t\treturn amountOfElement;\n\t\t\tcase 'nieWybrane':\n\t\t\t\treturn (\n\t\t\t\t\tselectedElementsAmount('wszystkie') -\n\t\t\t\t\tselectedElementsAmount('green') -\n\t\t\t\t\tselectedElementsAmount('blue') -\n\t\t\t\t\tselectedElementsAmount('red')\n\t\t\t\t);\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\t};\n\n\tselectedElementsAmount();\n\treturn (\n\t\t<div className={classes.Counter}>\n\t\t\t<p>TAK: {selectedElementsAmount('green')} </p>\n\t\t\t<p>MOŻE: {selectedElementsAmount('blue')}</p>\n\t\t\t<p>NIE: {selectedElementsAmount('red')}</p>\n\t\t\t<p>WSZYSTKIE: {selectedElementsAmount('wszystkie')}</p>\n\t\t\t<p>NIE WYBRANE: {selectedElementsAmount('nieWybrane')}</p>\n\t\t</div>\n\t);\n};\n\nexport default counter;\n","import React, { Component } from 'react';\nimport ImagesGenerator from '../../components/ImagesGenerator/ImagesGenerator';\nimport Button from '../../components/Button/Button';\nimport Counter from '../../components/Counter/Counter';\nimport firebase from 'firebase/app';\nimport 'firebase/storage';\nimport 'firebase/database';\nimport classes from './Uploader.module.scss';\n\nclass Uploader extends Component {\n\tstate = {\n\t\tuserName: 'Marcin',\n\t\tpicturesPaths: [],\n\t\tpicturesTitles: [],\n\t\tpicturesDataObj: null,\n\t\tselectedfiles: null,\n\t\tbuttonIsDisabled: true,\n\t\tinputValue: ''\n\t};\n\n\tcomponentDidMount() {\n\t\tconst userNameDbElement = firebase.database().ref().child(this.state.userName);\n\n\t\tuserNameDbElement.on('value', (snapshot) => {\n\t\t\tif (!snapshot.exists()) return;\n\t\t\tconst picturesTitles = Object.keys(snapshot.val());\n\t\t\tconst picturesPaths = [];\n\t\t\tconst picturesDataObj = snapshot.val();\n\n\t\t\tfor (const prop in snapshot.val()) {\n\t\t\t\tconst picturePath = snapshot.val()[prop].path;\n\t\t\t\tpicturesPaths.push(picturePath);\n\t\t\t}\n\n\t\t\tthis.setState({\n\t\t\t\tpicturesTitles: picturesTitles,\n\t\t\t\tpicturesPaths: picturesPaths,\n\t\t\t\tpicturesDataObj: picturesDataObj\n\t\t\t});\n\t\t});\n\t}\n\n\tselectImageHandler = (e) => {\n\t\tthis.setState({\n\t\t\tselectedfiles: e.target.files,\n\t\t\tbuttonIsDisabled: false\n\t\t});\n\t};\n\n\tuploadHandler = () => {\n\t\tconst files = this.state.selectedfiles;\n\t\tconst metadata = {\n\t\t\tcontentType: 'image/jpeg'\n\t\t};\n\t\tconst storageRef = firebase.storage().ref();\n\t\tconst filesArr = [ ...files ];\n\n\t\tfilesArr.forEach((file, i) => {\n\t\t\tconst uploadTask = storageRef.child('images/' + file.name).put(file, metadata);\n\t\t\tuploadTask.on(\n\t\t\t\tfirebase.storage.TaskEvent.STATE_CHANGED,\n\t\t\t\t(snapshot) => {\n\t\t\t\t\tconst progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n\t\t\t\t\tconsole.log('Upload (' + i + ') is: ' + Math.round(progress) + '%');\n\t\t\t\t},\n\t\t\t\t(error) => {\n\t\t\t\t\tswitch (error.code) {\n\t\t\t\t\t\tcase 'storage/unauthorized':\n\t\t\t\t\t\t\tconsole.log('No permission');\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'storage/canceled':\n\t\t\t\t\t\t\tconsole.log('Stopped upload');\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'storage/unknown':\n\t\t\t\t\t\t\tconsole.log('Unknown error');\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t() => {\n\t\t\t\t\tconst pictureTitle = uploadTask.snapshot.ref.name.replace('.jpg', '');\n\t\t\t\t\tuploadTask.snapshot.ref.getDownloadURL().then((downloadURL) => {\n\t\t\t\t\t\tfirebase.database().ref(this.state.userName + '/').child(pictureTitle).set({\n\t\t\t\t\t\t\tcontainerColor: '',\n\t\t\t\t\t\t\tpath: downloadURL,\n\t\t\t\t\t\t\tisClickedGreen: false,\n\t\t\t\t\t\t\tisClickedBlue: false,\n\t\t\t\t\t\t\tisClickedRed: false\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className={classes.Uploader}>\n\t\t\t\t<h1>{this.state.userName}</h1>\n\t\t\t\t<input type=\"file\" multiple onChange={this.selectImageHandler} />\n\t\t\t\t<Button\n\t\t\t\t\tclicked={this.uploadHandler}\n\t\t\t\t\tbuttonText=\"UPLOAD\"\n\t\t\t\t\tbuttonColor=\"Button__green\"\n\t\t\t\t\tbuttonIsDisabled={this.state.buttonIsDisabled}\n\t\t\t\t/>\n\t\t\t\t<Counter picturesDataObj={this.state.picturesDataObj} />\n\t\t\t\t<div className={classes.Uploader__imagesContainer}>\n\t\t\t\t\t<ImagesGenerator\n\t\t\t\t\t\timages={this.state.picturesPaths}\n\t\t\t\t\t\ttitles={this.state.picturesTitles}\n\t\t\t\t\t\tpicturesDataObj={this.state.picturesDataObj}\n\t\t\t\t\t\tuserName={this.state.userName}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Uploader;\n","import React, { Component } from 'react';\nimport Uploader from './containers/Uploader/Uploader';\n\nclass App extends Component {\n\trender() {\n\t\treturn <Uploader />;\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport firebase from 'firebase/app';\nimport 'firebase/storage';\nimport 'firebase/database';\n\n// Initialize Firebase\nconst config = {\n\tapiKey: 'AIzaSyB05MIkrZq52LQIiRrC1nFsUp7hkBG3odc',\n\tauthDomain: 'upload-images-69afc.firebaseapp.com',\n\tdatabaseURL: 'https://upload-images-69afc.firebaseio.com',\n\tprojectId: 'upload-images-69afc',\n\tstorageBucket: 'upload-images-69afc.appspot.com',\n\tmessagingSenderId: '419462563824'\n};\nfirebase.initializeApp(config);\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageContainer\":\"ImageContainer_ImageContainer__3h35j\",\"ImageContainer__green\":\"ImageContainer_ImageContainer__green__3X58B\",\"ImageContainer__blue\":\"ImageContainer_ImageContainer__blue__3NS-X\",\"ImageContainer__red\":\"ImageContainer_ImageContainer__red__27ku3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Image\":\"Image_Image__2rN34\",\"Image__title\":\"Image_Image__title__2vuPL\",\"Image__selectionButtons\":\"Image_Image__selectionButtons__B1sfM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__chNl1\",\"Button__green\":\"Button_Button__green__2BtT-\",\"Button__blue\":\"Button_Button__blue__1SR39\",\"Button__red\":\"Button_Button__red__2b8Pk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Uploader\":\"Uploader_Uploader__39k2Q\",\"Uploader__imagesContainer\":\"Uploader_Uploader__imagesContainer__2bLa3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Counter\":\"Counter_Counter__1kSSG\"};"],"sourceRoot":""}