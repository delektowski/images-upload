{"version":3,"sources":["components/Button/Button.js","components/ImageContainer/ImageContainer.js","containers/Image/utylity.js","containers/Image/Image.js","components/ImagesGenerator/ImagesGenerator.js","components/Counter/Counter.js","components/Filter/Filter.js","components/Reset/Reset.js","Layout/Layout.js","containers/Uploader/Uploader.js","App.js","serviceWorker.js","index.js","components/ImageContainer/ImageContainer.module.scss","containers/Image/Image.module.scss","components/Button/Button.module.scss","containers/Uploader/Uploader.module.scss","components/Counter/Counter.module.scss","components/Filter/Filter.module.scss","components/Reset/Reset.module.scss","Layout/Layout.module.scss"],"names":["Button","props","react_default","a","createElement","disabled","buttonIsDisabled","onClick","clicked","className","classes","buttonColor","join","buttonText","imageContainer","ImageContainer","containerColor","ImageContainer__green","ImageContainer__blue","ImageContainer__red","children","updateImageState","isClickedGreen","isClickedBlue","isClickedRed","Image","state","buttonClickHandler","_this","setState","prevState","color","firebase","database","ref","concat","userName","caption","update","key","this","imagesDataObj","_this2","Fragment","src","alt","Image__title","Image__selectionButtons","components_Button_Button","Component","imagesGenerator","imagesTitlesPaths","imagesPaths","nothingClicked","imagesDataObjArr","notSelectedClicked","filterButtonsState","allClicked","greenClicked","blueClicked","redClicked","prop","push","Object","defineProperty","imagesDataObjFiltered","filter","element","isFilterGreenClicked","keys","isFilterBlueClicked","isFilterRedClicked","isFilteredAllClicked","map","e","imagePath","path","reduce","sum","current","img","image","RegExp","test","containers_Image_Image","values","counter","selectedElementsAmount","elementColor","amountOfElement","everyPicture","Counter","Filter","anyButtonClicked","whichButton","Reset","value","Layout","Uploader","selectedfiles","selectImageHandler","target","files","uploadHandler","metadata","contentType","storageRef","storage","toConsumableArray","forEach","file","i","uploadTask","child","name","put","on","TaskEvent","STATE_CHANGED","snapshot","progress","bytesTransferred","totalBytes","console","log","Math","round","error","code","pictureTitle","replace","getDownloadURL","then","downloadURL","set","filterButtonsStateHandler","buttonsStateObj","exists","val","src_Layout_Layout","type","multiple","onChange","components_Filter_Filter","components_Reset_Reset","Uploader__imagesContainer","ImagesGenerator","images","picturesPaths","titles","picturesTitles","reset","App","containers_Uploader_Uploader","Boolean","window","location","hostname","match","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","Button__green","Button__blue","Button__red"],"mappings":"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","file":"static/js/main.3fd259ba.chunk.js","sourcesContent":["import React from 'react';\nimport classes from './Button.module.scss';\n\nconst Button = (props) => {\n\treturn (\n\t\t<button\n\t\t\tdisabled={props.buttonIsDisabled}\n\t\t\tonClick={props.clicked}\n\t\t\tclassName={[ classes.Button, classes[props.buttonColor] ].join(' ')}\n\t\t>\n\t\t\t{props.buttonText}\n\t\t</button>\n\t);\n};\n\nexport default Button;\n","import React from 'react';\nimport classes from './ImageContainer.module.scss';\n\nconst imageContainer = (props) => {\n\treturn (\n\t\t<div\n\t\t\tclassName={[\n\t\t\t\tclasses.ImageContainer,\n\t\t\t\tprops.containerColor === 'green' ? classes.ImageContainer__green : null,\n\t\t\t\tprops.containerColor === 'blue' ? classes.ImageContainer__blue : null,\n\t\t\t\tprops.containerColor === 'red' ? classes.ImageContainer__red : null\n\t\t\t].join(' ')}\n\t\t>\n\t\t\t{props.children}\n\t\t</div>\n\t);\n};\n\nexport default imageContainer;\n","export const updateImageState = (containerColor, isClickedGreen, isClickedBlue, isClickedRed) => {\n\treturn {\n\t\tcontainerColor: containerColor,\n\t\tisClickedGreen: isClickedGreen,\n\t\tisClickedBlue: isClickedBlue,\n\t\tisClickedRed: isClickedRed\n\t};\n};\n","import React, { Component } from 'react';\nimport classes from './Image.module.scss';\nimport Button from '../../components/Button/Button';\nimport ImageContainer from '../../components/ImageContainer/ImageContainer';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\nimport { updateImageState } from './utylity';\n\nclass Image extends Component {\n\tstate = {\n\t\tcontainerColor: '',\n\t\tisClickedGreen: false,\n\t\tisClickedBlue: false,\n\t\tisClickedRed: false\n\t};\n\n\tbuttonClickHandler = (buttonColor) => {\n\t\tswitch (buttonColor) {\n\t\t\tcase 'green':\n\t\t\t\tthis.setState((prevState) => {\n\t\t\t\t\tlet color = 'green';\n\t\t\t\t\tif (prevState.isClickedGreen === true) color = '';\n\t\t\t\t\tfirebase\n\t\t\t\t\t\t.database()\n\t\t\t\t\t\t.ref(`${this.props.userName}/${this.props.caption[0]}`)\n\t\t\t\t\t\t.update(updateImageState(color, !prevState.isClickedGreen, false, false));\n\n\t\t\t\t\treturn updateImageState(color, !prevState.isClickedGreen, false, false);\n\t\t\t\t});\n\n\t\t\t\tbreak;\n\t\t\tcase 'blue':\n\t\t\t\tthis.setState((prevState) => {\n\t\t\t\t\tlet color = 'blue';\n\t\t\t\t\tif (prevState.isClickedBlue === true) color = '';\n\t\t\t\t\tfirebase\n\t\t\t\t\t\t.database()\n\t\t\t\t\t\t.ref(`${this.props.userName}/${this.props.caption[0]}`)\n\t\t\t\t\t\t.update(updateImageState(color, false, !prevState.isClickedBlue, false));\n\t\t\t\t\treturn updateImageState(color, false, !prevState.isClickedBlue, false);\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 'red':\n\t\t\t\tthis.setState((prevState) => {\n\t\t\t\t\tlet color = 'red';\n\t\t\t\t\tif (prevState.isClickedRed === true) color = '';\n\t\t\t\t\tfirebase\n\t\t\t\t\t\t.database()\n\t\t\t\t\t\t.ref(`${this.props.userName}/${this.props.caption[0]}`)\n\t\t\t\t\t\t.update(updateImageState(color, false, false, !prevState.isClickedRed));\n\t\t\t\t\treturn updateImageState(color, false, false, !prevState.isClickedRed);\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\tcomponentDidMount() {\n\t\t// Recognize state of the element based on Firebase data\n\t\tfor (let key in this.props.imagesDataObj) {\n\t\t\tif (key === this.props.caption[0]) {\n\t\t\t\tlet color = '';\n\t\t\t\tif (this.props.imagesDataObj[key].isClickedGreen) color = 'green';\n\t\t\t\tif (this.props.imagesDataObj[key].isClickedBlue) color = 'blue';\n\t\t\t\tif (this.props.imagesDataObj[key].isClickedRed) color = 'red';\n\t\t\t\tthis.setState(\n\t\t\t\t\tupdateImageState(\n\t\t\t\t\t\tcolor,\n\t\t\t\t\t\tthis.props.imagesDataObj[key].isClickedGreen,\n\t\t\t\t\t\tthis.props.imagesDataObj[key].isClickedBlue,\n\t\t\t\t\t\tthis.props.imagesDataObj[key].isClickedRed\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tcomponentDidUpdate() {\n\t\t// This make possible to see changes simultaneously on different instances of the app\n\t\tif (this.props.imagesDataObj[this.props.caption[0]].isClickedGreen !== this.state.isClickedGreen) {\n\t\t\tthis.setState({\n\t\t\t\tisClickedGreen: this.props.imagesDataObj[this.props.caption[0]].isClickedGreen,\n\t\t\t\tcontainerColor: this.props.imagesDataObj[this.props.caption[0]].containerColor\n\t\t\t});\n\t\t}\n\t\tif (this.props.imagesDataObj[this.props.caption[0]].isClickedBlue !== this.state.isClickedBlue) {\n\t\t\tthis.setState({\n\t\t\t\tisClickedBlue: this.props.imagesDataObj[this.props.caption[0]].isClickedBlue,\n\t\t\t\tcontainerColor: this.props.imagesDataObj[this.props.caption[0]].containerColor\n\t\t\t});\n\t\t}\n\t\tif (this.props.imagesDataObj[this.props.caption[0]].isClickedRed !== this.state.isClickedRed) {\n\t\t\tthis.setState({\n\t\t\t\tisClickedRed: this.props.imagesDataObj[this.props.caption[0]].isClickedRed,\n\t\t\t\tcontainerColor: this.props.imagesDataObj[this.props.caption[0]].containerColor\n\t\t\t});\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<ImageContainer containerColor={this.state.containerColor}>\n\t\t\t\t\t<figure>\n\t\t\t\t\t\t<img className={classes.Image} src={this.props.src} alt={this.props.caption[0]} />\n\t\t\t\t\t\t<figcaption className={classes.Image__title}>{this.props.caption[0]}</figcaption>\n\t\t\t\t\t</figure>\n\t\t\t\t\t<div className={classes.Image__selectionButtons}>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tclicked={() => this.buttonClickHandler('green')}\n\t\t\t\t\t\t\tbuttonText=\"Tak\"\n\t\t\t\t\t\t\tbuttonColor=\"Button__green\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tclicked={() => this.buttonClickHandler('blue')}\n\t\t\t\t\t\t\tbuttonText=\"Może\"\n\t\t\t\t\t\t\tbuttonColor=\"Button__blue\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tclicked={() => this.buttonClickHandler('red')}\n\t\t\t\t\t\t\tbuttonText=\"Nie\"\n\t\t\t\t\t\t\tbuttonColor=\"Button__red\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</ImageContainer>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default Image;\n","import React from 'react';\nimport Image from '../../containers/Image/Image';\n\nconst imagesGenerator = (props) => {\n\tlet imagesPaths = [];\n\tlet imagesTitlesPaths;\n\tconst imagesDataObj = props.imagesDataObj;\n\n\tif (imagesDataObj !== null) {\n\t\t//Filter pictures based on filter button state\n\t\tconst imagesDataObjArr = [];\n\t\tconst notSelectedClicked = props.filterButtonsState.notSelectedClicked;\n\t\tconst allClicked = props.filterButtonsState.allClicked;\n\t\tconst greenClicked = props.filterButtonsState.greenClicked;\n\t\tconst blueClicked = props.filterButtonsState.blueClicked;\n\t\tconst redClicked = props.filterButtonsState.redClicked;\n\t\tlet nothingClicked;\n\t\tfor (const prop in imagesDataObj) {\n\t\t\timagesDataObjArr.push({ [prop]: imagesDataObj[prop] });\n\t\t}\n\n\t\tif (!allClicked & !notSelectedClicked & !greenClicked & !blueClicked & !redClicked) {\n\t\t\tnothingClicked = true;\n\t\t} else {\n\t\t\tnothingClicked = false;\n\t\t}\n\n\t\tconst imagesDataObjFiltered = imagesDataObjArr\n\t\t\t.filter((element) => {\n\t\t\t\tconst isFilterGreenClicked = greenClicked ? element[Object.keys(element)].isClickedGreen : null;\n\t\t\t\tconst isFilterBlueClicked = blueClicked ? element[Object.keys(element)].isClickedBlue : null;\n\t\t\t\tconst isFilterRedClicked = redClicked ? element[Object.keys(element)].isClickedRed : null;\n\t\t\t\tconst isFilteredAllClicked = allClicked ? true : null;\n\t\t\t\tconst isFilteredNotSelectedClicked = notSelectedClicked\n\t\t\t\t\t? !element[Object.keys(element)].isClickedGreen &&\n\t\t\t\t\t\t!element[Object.keys(element)].isClickedBlue &&\n\t\t\t\t\t\t!element[Object.keys(element)].isClickedRed\n\t\t\t\t\t: null;\n\n\t\t\t\treturn (\n\t\t\t\t\tisFilteredNotSelectedClicked ||\n\t\t\t\t\tisFilterGreenClicked ||\n\t\t\t\t\tisFilterBlueClicked ||\n\t\t\t\t\tisFilterRedClicked ||\n\t\t\t\t\tnothingClicked ||\n\t\t\t\t\tisFilteredAllClicked\n\t\t\t\t);\n\t\t\t})\n\t\t\t.map((e) => Object.keys(e)[0]);\n\n\t\t// Link picture title with exact picture file\n\t\tfor (const prop in imagesDataObj) {\n\t\t\tconst imagePath = imagesDataObj[prop].path;\n\t\t\timagesPaths.push(imagePath);\n\t\t}\n\n\t\tconst imageTitleArr = imagesDataObjFiltered.reduce((sum, current) => {\n\t\t\tconst img = imagesPaths.filter((image) => {\n\t\t\t\tlet patt = new RegExp(current, 'g');\n\t\t\t\treturn patt.test(image);\n\t\t\t});\n\t\t\treturn sum.concat({ [current]: img[0] });\n\t\t}, []);\n\n\t\timagesTitlesPaths = imageTitleArr.map((element) => {\n\t\t\treturn (\n\t\t\t\t<Image\n\t\t\t\t\tkey={Object.keys(element)}\n\t\t\t\t\tsrc={Object.values(element)}\n\t\t\t\t\tcaption={Object.keys(element)}\n\t\t\t\t\timagesDataObj={imagesDataObj}\n\t\t\t\t\tuserName={props.userName}\n\t\t\t\t/>\n\t\t\t);\n\t\t});\n\t}\n\n\treturn <React.Fragment>{imagesTitlesPaths}</React.Fragment>;\n};\n\nexport default imagesGenerator;\n","import React from 'react';\nimport classes from './Counter.module.scss';\n\nconst counter = (props) => {\n\tconst selectedElementsAmount = (elementColor) => {\n\t\tlet amountOfElement = 0;\n\t\tswitch (elementColor) {\n\t\t\tcase 'green':\n\t\t\t\tfor (let isClickedGreen in props.imagesDataObj) {\n\t\t\t\t\tif (props.imagesDataObj[isClickedGreen].isClickedGreen === true) amountOfElement++;\n\t\t\t\t}\n\t\t\t\treturn amountOfElement;\n\t\t\tcase 'blue':\n\t\t\t\tfor (let isClickedBlue in props.imagesDataObj) {\n\t\t\t\t\tif (props.imagesDataObj[isClickedBlue].isClickedBlue === true) amountOfElement++;\n\t\t\t\t}\n\t\t\t\treturn amountOfElement;\n\n\t\t\tcase 'red':\n\t\t\t\tfor (let isClickedRed in props.imagesDataObj) {\n\t\t\t\t\tif (props.imagesDataObj[isClickedRed].isClickedRed === true) amountOfElement++;\n\t\t\t\t}\n\t\t\t\treturn amountOfElement;\n\n\t\t\tcase 'wszystkie':\n\t\t\t\tfor (let everyPicture in props.imagesDataObj) {\n\t\t\t\t\tif (everyPicture) amountOfElement++;\n\t\t\t\t}\n\t\t\t\treturn amountOfElement;\n\t\t\tcase 'niezaznaczone':\n\t\t\t\treturn (\n\t\t\t\t\tselectedElementsAmount('wszystkie') -\n\t\t\t\t\tselectedElementsAmount('green') -\n\t\t\t\t\tselectedElementsAmount('blue') -\n\t\t\t\t\tselectedElementsAmount('red')\n\t\t\t\t);\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\t};\n\n\tselectedElementsAmount();\n\treturn (\n\t\t<div className={classes.Counter}>\n\t\t\t<p>TAK: {selectedElementsAmount('green')} </p>\n\t\t\t<p>MOŻE: {selectedElementsAmount('blue')}</p>\n\t\t\t<p>NIE: {selectedElementsAmount('red')}</p>\n\t\t\t<p>WSZYSTKIE: {selectedElementsAmount('wszystkie')}</p>\n\t\t\t<p>NIEZAZNACZONE: {selectedElementsAmount('niezaznaczone')}</p>\n\t\t</div>\n\t);\n};\n\nexport default counter;\n","import React, { Component } from 'react';\nimport Button from '../Button/Button';\nimport classes from './Filter.module.scss';\n\nclass Filter extends Component {\n\tstate = {\n\t\tgreenClicked: false,\n\t\tblueClicked: false,\n\t\tredClicked: false,\n\t\tallClicked: false,\n\t\tnotSelectedClicked: false,\n\t\tanyButtonClicked: false\n\t};\n\n\tbuttonClickHandler = (whichButton) => {\n\t\tswitch (whichButton) {\n\t\t\tcase 'greenClicked':\n\t\t\t\tthis.setState((prevState) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tgreenClicked: !prevState.greenClicked,\n\t\t\t\t\t\tallClicked: false,\n\t\t\t\t\t\tnotSelectedClicked: false,\n\t\t\t\t\t\tanyButtonClicked: true\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t\tbreak;\n\n\t\t\tcase 'blueClicked':\n\t\t\t\tthis.setState((prevState) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tblueClicked: !prevState.blueClicked,\n\t\t\t\t\t\tallClicked: false,\n\t\t\t\t\t\tnotSelectedClicked: false,\n\t\t\t\t\t\tanyButtonClicked: true\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t\tbreak;\n\n\t\t\tcase 'redClicked':\n\t\t\t\tthis.setState((prevState) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tredClicked: !prevState.redClicked,\n\t\t\t\t\t\tallClicked: false,\n\t\t\t\t\t\tnotSelectedClicked: false,\n\t\t\t\t\t\tanyButtonClicked: true\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t\tbreak;\n\n\t\t\tcase 'allClicked':\n\t\t\t\tthis.setState((prevState) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tgreenClicked: false,\n\t\t\t\t\t\tblueClicked: false,\n\t\t\t\t\t\tredClicked: false,\n\t\t\t\t\t\tallClicked: true,\n\t\t\t\t\t\tnotSelectedClicked: false,\n\t\t\t\t\t\tanyButtonClicked: true\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t\tbreak;\n\n\t\t\tcase 'notSelectedClicked':\n\t\t\t\tthis.setState((prevState) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tgreenClicked: false,\n\t\t\t\t\t\tblueClicked: false,\n\t\t\t\t\t\tredClicked: false,\n\t\t\t\t\t\tallClicked: false,\n\t\t\t\t\t\tnotSelectedClicked: true,\n\t\t\t\t\t\tanyButtonClicked: true\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\tcomponentDidUpdate() {\n\t\tif (this.state.anyButtonClicked) {\n\t\t\tthis.props.filterButtonsState(this.state);\n\t\t\tthis.setState({ anyButtonClicked: false });\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className={classes.Filter}>\n\t\t\t\t<Button\n\t\t\t\t\tclicked={() => this.buttonClickHandler('greenClicked')}\n\t\t\t\t\tbuttonText=\"tak\"\n\t\t\t\t\tbuttonColor=\"Button__green\"\n\t\t\t\t/>\n\t\t\t\t<Button\n\t\t\t\t\tclicked={() => this.buttonClickHandler('blueClicked')}\n\t\t\t\t\tbuttonText=\"może\"\n\t\t\t\t\tbuttonColor=\"Button__blue\"\n\t\t\t\t/>\n\t\t\t\t<Button\n\t\t\t\t\tclicked={() => this.buttonClickHandler('redClicked')}\n\t\t\t\t\tbuttonText=\"nie\"\n\t\t\t\t\tbuttonColor=\"Button__red\"\n\t\t\t\t/>\n\t\t\t\t<Button clicked={() => this.buttonClickHandler('allClicked')} buttonText=\"wszystkie\" buttonColor=\"\" />\n\t\t\t\t<Button\n\t\t\t\t\tclicked={() => this.buttonClickHandler('notSelectedClicked')}\n\t\t\t\t\tbuttonText=\"niezaznaczone\"\n\t\t\t\t\tbuttonColor=\"\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Filter;\n","import React from 'react';\nimport Button from '../Button/Button';\nimport classes from './Reset.module.scss';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\n\nconst Reset = (props) => {\n\tconst resetUserSelection = () => {\n\t\tfor (let value in props.imagesDataObj) {\n\t\t\tfirebase.database().ref(`${props.userName}/${value}`).update({\n\t\t\t\tcontainerColor: '',\n\t\t\t\tisClickedBlue: false,\n\t\t\t\tisClickedGreen: false,\n\t\t\t\tisClickedRed: false\n\t\t\t});\n\t\t}\n\t};\n\treturn (\n\t\t<div className={classes.Reset}>\n\t\t\t<Button clicked={resetUserSelection} buttonText=\"Reset\" />\n\t\t</div>\n\t);\n};\n\nexport default Reset;\n","import React from 'react';\nimport classes from './Layout.module.scss';\n\nconst Layout = (props) => {\n\treturn <div className={classes.Layout}>{props.children}</div>;\n};\n\nexport default Layout;\n","import React, { Component } from 'react';\nimport ImagesGenerator from '../../components/ImagesGenerator/ImagesGenerator';\nimport Button from '../../components/Button/Button';\nimport Counter from '../../components/Counter/Counter';\nimport Filter from '../../components/Filter/Filter';\nimport Reset from '../../components/Reset/Reset';\nimport Layout from '../../Layout/Layout';\nimport firebase from 'firebase/app';\nimport 'firebase/storage';\nimport 'firebase/database';\nimport classes from './Uploader.module.scss';\n\nclass Uploader extends Component {\n\tstate = {\n\t\tuserName: 'Marcin',\n\t\timagesDataObj: null,\n\t\tselectedfiles: null,\n\t\tbuttonIsDisabled: true,\n\t\tfilterButtonsState: false\n\t};\n\n\tcomponentDidMount() {\n\t\tconst userNameDbElement = firebase.database().ref().child(this.state.userName);\n\t\tuserNameDbElement.on('value', (snapshot) => {\n\t\t\tif (!snapshot.exists()) return;\n\t\t\tconst imagesDataObj = snapshot.val();\n\t\t\tthis.setState({\n\t\t\t\timagesDataObj: imagesDataObj\n\t\t\t});\n\t\t});\n\t}\n\n\tselectImageHandler = (e) => {\n\t\tthis.setState({\n\t\t\tselectedfiles: e.target.files,\n\t\t\tbuttonIsDisabled: false\n\t\t});\n\t};\n\n\tuploadHandler = () => {\n\t\tconst files = this.state.selectedfiles;\n\t\tconst metadata = {\n\t\t\tcontentType: 'image/jpeg'\n\t\t};\n\t\tconst storageRef = firebase.storage().ref();\n\t\tconst filesArr = [ ...files ];\n\n\t\tfilesArr.forEach((file, i) => {\n\t\t\tconst uploadTask = storageRef.child('images/' + file.name).put(file, metadata);\n\t\t\tuploadTask.on(\n\t\t\t\tfirebase.storage.TaskEvent.STATE_CHANGED,\n\t\t\t\t(snapshot) => {\n\t\t\t\t\tconst progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n\t\t\t\t\tconsole.log('Upload (' + i + ') is: ' + Math.round(progress) + '%');\n\t\t\t\t},\n\t\t\t\t(error) => {\n\t\t\t\t\tswitch (error.code) {\n\t\t\t\t\t\tcase 'storage/unauthorized':\n\t\t\t\t\t\t\tconsole.log('No permission');\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'storage/canceled':\n\t\t\t\t\t\t\tconsole.log('Stopped upload');\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'storage/unknown':\n\t\t\t\t\t\t\tconsole.log('Unknown error');\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t() => {\n\t\t\t\t\tconst pictureTitle = uploadTask.snapshot.ref.name.replace('.jpg', '');\n\t\t\t\t\tuploadTask.snapshot.ref.getDownloadURL().then((downloadURL) => {\n\t\t\t\t\t\tfirebase.database().ref(this.state.userName + '/').child(pictureTitle).set({\n\t\t\t\t\t\t\tcontainerColor: '',\n\t\t\t\t\t\t\tpath: downloadURL,\n\t\t\t\t\t\t\tisClickedGreen: false,\n\t\t\t\t\t\t\tisClickedBlue: false,\n\t\t\t\t\t\t\tisClickedRed: false\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\t};\n\n\tfilterButtonsStateHandler = (buttonsStateObj) => {\n\t\tthis.setState({\n\t\t\tfilterButtonsState: buttonsStateObj\n\t\t});\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<Layout>\n\t\t\t\t<div className={classes.Uploader}>\n\t\t\t\t\t<h1>{this.state.userName}</h1>\n\t\t\t\t\t<input type=\"file\" multiple onChange={this.selectImageHandler} />\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclicked={this.uploadHandler}\n\t\t\t\t\t\tbuttonText=\"UPLOAD\"\n\t\t\t\t\t\tbuttonColor=\"Button__green\"\n\t\t\t\t\t\tbuttonIsDisabled={this.state.buttonIsDisabled}\n\t\t\t\t\t/>\n\t\t\t\t\t<Counter imagesDataObj={this.state.imagesDataObj} />\n\t\t\t\t\t<Filter filterButtonsState={this.filterButtonsStateHandler} />\n\t\t\t\t\t<Reset userName={this.state.userName} imagesDataObj={this.state.imagesDataObj} />\n\t\t\t\t\t<div className={classes.Uploader__imagesContainer}>\n\t\t\t\t\t\t<ImagesGenerator\n\t\t\t\t\t\t\timages={this.state.picturesPaths}\n\t\t\t\t\t\t\ttitles={this.state.picturesTitles}\n\t\t\t\t\t\t\timagesDataObj={this.state.imagesDataObj}\n\t\t\t\t\t\t\tuserName={this.state.userName}\n\t\t\t\t\t\t\tfilterButtonsState={this.state.filterButtonsState}\n\t\t\t\t\t\t\treset={this.state.reset}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Layout>\n\t\t);\n\t}\n}\n\nexport default Uploader;\n","import React, { Component } from 'react';\nimport Uploader from './containers/Uploader/Uploader';\n\nclass App extends Component {\n\trender() {\n\t\treturn <Uploader />;\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport firebase from 'firebase/app';\nimport 'firebase/storage';\nimport 'firebase/database';\n\n// Initialize Firebase\nconst config = {\n\tapiKey: 'AIzaSyB05MIkrZq52LQIiRrC1nFsUp7hkBG3odc',\n\tauthDomain: 'upload-images-69afc.firebaseapp.com',\n\tdatabaseURL: 'https://upload-images-69afc.firebaseio.com',\n\tprojectId: 'upload-images-69afc',\n\tstorageBucket: 'upload-images-69afc.appspot.com',\n\tmessagingSenderId: '419462563824'\n};\nfirebase.initializeApp(config);\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageContainer\":\"ImageContainer_ImageContainer__3h35j\",\"ImageContainer__green\":\"ImageContainer_ImageContainer__green__3X58B\",\"ImageContainer__blue\":\"ImageContainer_ImageContainer__blue__3NS-X\",\"ImageContainer__red\":\"ImageContainer_ImageContainer__red__27ku3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Image\":\"Image_Image__2rN34\",\"Image__title\":\"Image_Image__title__2vuPL\",\"Image__selectionButtons\":\"Image_Image__selectionButtons__B1sfM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__chNl1\",\"Button__green\":\"Button_Button__green__2BtT-\",\"Button__blue\":\"Button_Button__blue__1SR39\",\"Button__red\":\"Button_Button__red__2b8Pk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Uploader\":\"Uploader_Uploader__39k2Q\",\"Uploader__imagesContainer\":\"Uploader_Uploader__imagesContainer__2bLa3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Counter\":\"Counter_Counter__1kSSG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Filter\":\"Filter_Filter__EJ2iM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Reset\":\"Reset_Reset__1v7zy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__2aHPw\"};"],"sourceRoot":""}